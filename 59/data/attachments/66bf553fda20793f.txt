# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Verify that user can perform the sign yourself using the word document
- Location: /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/pdfsCompatibility.spec.js:686:1

# Error details

```
Error: Timed out 90000ms waiting for expect(locator).toBeEnabled()

Locator: getByRole('button', { name: 'Next' })
Expected: enabled
Received: disabled
Call log:
  - expect.toBeEnabled with timeout 90000ms
  - waiting for getByRole('button', { name: 'Next' })
    93 × locator resolved to <button disabled type="submit" class="cursor-progress op-btn op-btn-primary">Next</button>
       - unexpected value "disabled"

    at /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/pdfsCompatibility.spec.js:704:60
```

# Page snapshot

```yaml
- text: "New feature: Teams plan users can now integrate their own AWS S3 buckets for file storage — Setup now. "
- button ""
- img "logo"
- text: TEAM
- button ""
- img "img"
- button "Pravin Testing account"
- button ""
- complementary:
  - img "Profile"
  - paragraph: Pravin Testing account
  - paragraph: OpenSign pvt ltd
  - navigation "OpenSign Sidebar Navigation":
    - menubar "OpenSign Sidebar Navigation":
      - menuitem "Dashboard"
      - menuitem "Sign yourself"
      - menuitem "Request signatures"
      - button " Templates"
      - menuitem "OpenSign™ Drive"
      - button " Documents"
      - menuitem "Contactbook"
      - button " Settings"
  - link "OpenSign's Github"
  - link "OpenSign's LinkedIn"
  - link "OpenSign's Twitter"
  - link "OpenSign's Discord"
- heading "Sign yourself" [level=1]
- text: Use this form to sign the document yourself without adding others File (pdf, png, jpg, jpeg, docx)*
- textbox
- button ""
- text: Document title*
- textbox: Offer Letter for QA1144
- text: Note*
- textbox: Note to myself
- text: Select folder
- img
- paragraph: OpenSign™ Drive
- paragraph
- superscript: "?"
- button "Next" [disabled]
- text: Cancel
- contentinfo:
  - complementary:
    - paragraph: "All rights reserved © 2025 OpenSign™ ( version: v2.12.0 )"
```

# Test source

```ts
  604 |     await page.locator('input[name="Note"]').click();
  605 |     const fileChooserPromise = page.waitForEvent('filechooser');
  606 |   await page.locator('input[type="file"]').click();
  607 |   const fileChooser = await fileChooserPromise;
  608 |   await fileChooser.setFiles(path.join(__dirname, '/TestData/Samplepdfs/IncompatiblePDFs/10840-002.pdf'));
  609 |   await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); // Wait up to 90s
  610 |   await page.getByRole('button', { name: 'Next' }).click();
  611 |   await page.waitForSelector('//div[@id=\'container\']//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  612 |   await page.waitForLoadState("networkidle");
  613 |   await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  614 | await page.locator('//span[normalize-space()="signature"]').hover();
  615 | await page.mouse.down();
  616 | await page.mouse.move(600, 300)
  617 | await page.mouse.up();
  618 | // Optionally save changes
  619 | await page.locator("//button[@type='button' and text()='Save']/parent::div").click();
  620 |
  621 | await page.locator('//span[normalize-space()="stamp"]').hover();
  622 | await page.mouse.down();
  623 | await page.mouse.move(600, 360)
  624 | await page.mouse.up();
  625 | const fileChooserPromise1 = page.waitForEvent('filechooser');
  626 | await page.locator('//i[@class=\'fa-light fa-cloud-upload-alt uploadImgLogo\']').click();
  627 | const fileChooser1 = await fileChooserPromise1;
  628 | await fileChooser1.setFiles(path.join(__dirname, '/TestData/Images/stamp.jpg'));
  629 | await page.locator("//button[normalize-space()='Save']").click();
  630 | await page.locator('//span[normalize-space()="initials"]').hover();
  631 | await page.mouse.down();
  632 | await page.mouse.move(600, 420)
  633 | await page.mouse.up();
  634 | await page.locator("//button[@type='button' and text()='Save']/parent::div").click();
  635 | await page.locator('//span[normalize-space()="name"]').hover();
  636 | await page.mouse.down();
  637 | await page.mouse.move(600, 470)
  638 | await page.mouse.up();
  639 | await page.locator('//span[normalize-space()="job title"]').hover();
  640 | await page.mouse.down();
  641 | await page.mouse.move(600, 480)
  642 | await page.mouse.up();
  643 | await page.locator('//span[normalize-space()="company"]').hover();
  644 | await page.mouse.down();
  645 | await page.mouse.move(600, 520)
  646 | await page.mouse.up();
  647 |
  648 | await page.locator('//span[normalize-space()="date"]').hover();
  649 | await page.mouse.down();
  650 | await page.mouse.move(600, 550)
  651 | await page.mouse.up();
  652 | /*
  653 | await page.locator('//span[normalize-space()="text"]').hover();
  654 | await page.mouse.down();
  655 | await page.waitForTimeout(1000);
  656 | await page.mouse.move(600, 590)//textarea[@placeholder='text']
  657 | await page.mouse.up();
  658 | await page.locator('//textarea[@placeholder=\'text\']').fill('20 wood street sanfransisco');
  659 |
  660 | await page.locator('//span[normalize-space()="checkbox"]').hover();
  661 | await page.mouse.down();
  662 | await page.mouse.move(600, 640)
  663 | await page.mouse.up();
  664 | page.locator("//button[@type='submit' and text()='Save']").click();
  665 | await page.locator('//span[normalize-space()="image"]').hover();
  666 | await page.mouse.down();
  667 | await page.mouse.move(600, 550)
  668 | await page.mouse.up();
  669 | const fileChooserPromise2 = page.waitForEvent('filechooser');
  670 | await page.locator('//i[@class=\'fa-light fa-cloud-upload-alt uploadImgLogo\']').click();
  671 | const fileChooser2 = await fileChooserPromise2;
  672 | await fileChooser2.setFiles(path.join(__dirname, '/TestData/Images/DesignerImage.png'));
  673 | await page.locator("//button[normalize-space()='Save']").click();
  674 | await page.locator('//span[normalize-space()="email"]').hover();
  675 | await page.mouse.down();
  676 | await page.mouse.move(600, 580)
  677 | await page.mouse.up();
  678 | await page.locator("//button[normalize-space()='Finish']").click();
  679 | await page.getByText('Successfully signed!').waitFor({ timeout: 120000 });
  680 |   await page.locator("//input[@placeholder='Add an email address and hit enter']").fill('pravin@Nxglabs.in');
  681 |   await page.locator("//i[@class='fa-light fa-plus']").first().click();
  682 |   await page.locator("//button[normalize-space()='Send']").click();
  683 |
  684 | });*/
  685 |
  686 | test('Verify that user can perform the sign yourself using the word document', async ({ page }) => {
  687 |     const commonSteps = new CommonSteps(page);
  688 |     // Step 1: Navigate to Base URL and log in
  689 |     await commonSteps.navigateToBaseUrl();
  690 |     await commonSteps.login();
  691 |   //const title = await page.title()
  692 |     //Expects page to have a heading with the name of dashboard.
  693 |   //expect(title).toBe('Dashboard - OpenSign™');
  694 |   
  695 |   await page.getByRole('menuitem', { name: 'Sign yourself' }).click();
  696 |     await page.locator('input[name="Name"]').click();
  697 |     await page.locator('input[name="Name"]').fill('Offer Letter for QA1144');
  698 |     await page.locator('input[name="Name"]').press('Tab');
  699 |     await page.locator('input[name="Note"]').click();
  700 |     const fileChooserPromise = page.waitForEvent('filechooser');
  701 |   await page.locator('input[type="file"]').click();
  702 |   const fileChooser = await fileChooserPromise;
  703 |   await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample_Test_word_doc.docx'));
> 704 |   await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); // Wait up to 90s
      |                                                            ^ Error: Timed out 90000ms waiting for expect(locator).toBeEnabled()
  705 |   await page.getByRole('button', { name: 'Next' }).click();
  706 |   await page.waitForSelector('//div[@id=\'container\']//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  707 |   await page.waitForLoadState("networkidle");
  708 |   await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  709 |   await page.waitForLoadState("networkidle");
  710 | await page.locator('//span[normalize-space()="signature"]').hover();
  711 | await page.mouse.down();
  712 | await page.mouse.move(600, 300)
  713 | await page.mouse.up();
  714 | // Optionally save changes
  715 | try {
  716 |   const rowLocator = page.locator("//button[@type='button' and text()='Save']/parent::div");
  717 |
  718 |   for (let i = 0; i < 5; i++) { // Retry up to 5 times
  719 |       if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  720 |           await rowLocator.click();
  721 |           console.log("Save button clicked!");
  722 |           break; // Exit the loop if successfully clicked
  723 |       } else {
  724 |           console.log(`Attempt ${i + 1}: Save button not visible, performing actions...`);
  725 |   
  726 |           await page.locator('//span[normalize-space()="signature"]').hover();
  727 |           await page.mouse.down();
  728 |           await page.mouse.move(800, 300);
  729 |           await page.mouse.up();
  730 |           
  731 |           // Wait a bit before checking again
  732 |           await page.waitForTimeout(1000);
  733 |       }
  734 |   
  735 |       if (i === 5) {
  736 |           console.log("Save button did not become visible after multiple attempts.");
  737 |       }
  738 |   }
  739 | } catch (error) {
  740 |   console.log("Element not found or not interactable, continuing execution.");
  741 |  
  742 | }
  743 |
  744 | await page.locator('//span[normalize-space()="stamp"]').hover();
  745 | await page.mouse.down();
  746 | await page.mouse.move(600, 360)
  747 | await page.mouse.up();
  748 | const fileChooserPromise1 = page.waitForEvent('filechooser');
  749 | await page.locator('//i[@class=\'fa-light fa-cloud-upload-alt uploadImgLogo\']').click();
  750 | const fileChooser1 = await fileChooserPromise1;
  751 | await fileChooser1.setFiles(path.join(__dirname, '../TestData/Images/stamp.jpg'));
  752 | await page.locator("//button[normalize-space()='Save']").click();
  753 | await page.locator('//span[normalize-space()="initials"]').hover();
  754 | await page.mouse.down();
  755 | await page.mouse.move(600, 420)
  756 | await page.mouse.up();
  757 | await page.locator("//button[@type='button' and text()='Save']/parent::div").click();
  758 | await page.locator('//span[normalize-space()="name"]').hover();
  759 | await page.mouse.down();
  760 | await page.mouse.move(600, 470)
  761 | await page.mouse.up();
  762 | await page.locator('//span[normalize-space()="job title"]').hover();
  763 | await page.mouse.down();
  764 | await page.mouse.move(600, 480)
  765 | await page.mouse.up();
  766 | await page.locator('//span[normalize-space()="company"]').hover();
  767 | await page.mouse.down();
  768 | await page.mouse.move(600, 520)
  769 | await page.mouse.up();
  770 |
  771 | await page.locator('//span[normalize-space()="date"]').hover();
  772 | await page.mouse.down();
  773 | await page.mouse.move(600, 550)
  774 | await page.mouse.up();
  775 | /*
  776 | await page.locator('//span[normalize-space()="text"]').hover();
  777 | await page.mouse.down();
  778 | await page.waitForTimeout(1000);
  779 | await page.mouse.move(600, 590)//textarea[@placeholder='text']
  780 | await page.mouse.up();
  781 | await page.locator('//textarea[@placeholder=\'text\']').fill('20 wood street sanfransisco');
  782 | */
  783 | await page.locator('//span[normalize-space()="checkbox"]').hover();
  784 | await page.mouse.down();
  785 | await page.mouse.move(600, 640)
  786 | await page.mouse.up();
  787 | page.locator("//button[@type='submit' and text()='Save']").click();
  788 | await page.locator('//span[normalize-space()="image"]').hover();
  789 | await page.mouse.down();
  790 | await page.mouse.move(600, 550)
  791 | await page.mouse.up();
  792 | const fileChooserPromise2 = page.waitForEvent('filechooser');
  793 | await page.locator('//i[@class=\'fa-light fa-cloud-upload-alt uploadImgLogo\']').click();
  794 | const fileChooser2 = await fileChooserPromise2;
  795 | await fileChooser2.setFiles(path.join(__dirname, '../TestData/Images/DesignerImage.png'));
  796 | await page.locator("//button[normalize-space()='Save']").click();
  797 | await page.locator('//span[normalize-space()="email"]').hover();
  798 | await page.mouse.down();
  799 | await page.mouse.move(600, 580)
  800 | await page.mouse.up();
  801 | await page.locator("//button[normalize-space()='Finish']").click();
  802 | await page.getByText('Successfully signed!').waitFor({ timeout: 90000 });
  803 |   await page.locator("//input[@placeholder='Add an email address and hit enter']").fill('pravin@Nxglabs.in');
  804 |   await page.locator("//i[@class='fa-light fa-plus']").first().click();
```