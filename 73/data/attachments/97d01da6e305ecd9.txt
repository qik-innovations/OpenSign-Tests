# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Request signature >> Verify that textinput field widget Copy widget to all pages but last function correctly in request signature.
- Location: /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/Request_Signature.spec.js:3646:1

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toBeVisible()

Locator: locator('//div[@class="signYourselfBlock react-draggable react-draggable-dragged"]//div[@class="select-none-cls"]//span[text()="text input"]')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 5000ms
  - waiting for locator('//div[@class="signYourselfBlock react-draggable react-draggable-dragged"]//div[@class="select-none-cls"]//span[text()="text input"]')

    at /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/Request_Signature.spec.js:3720:165
```

# Page snapshot

```yaml
- banner:
  - text: "New feature: Protect your account with Two-Factor Authentication (2FA) and enjoy the future of login with Passkeys — no passwords needed. — Setup now."
  - img
  - text: 
  - button ""
  - img "logo"
  - text: TEAM
  - button ""
  - img "img"
  - button "Pravin Testing account"
  - button ""
- complementary:
  - img "Profile"
  - paragraph: Pravin Testing account
  - paragraph: OpenSign pvt ltd
  - navigation "OpenSign Sidebar Navigation":
    - menubar "OpenSign Sidebar Navigation":
      - menuitem "Dashboard"
      - menuitem "Sign yourself"
      - menuitem "Request signatures"
      - button " Templates"
      - menuitem "OpenSign™ Drive"
      - button " Documents"
      - menuitem "Contactbook"
      - button " Settings"
  - link "OpenSign's Github"
  - link "OpenSign's LinkedIn"
  - link "OpenSign's Twitter"
  - link "OpenSign's Discord"
- text: Pages
- button "+ Add pages"
- text: +      
- button [disabled]
- text: 1 of 3
- button
- button "Back"
- button "Next"
- text: signature     text input Recipients  Andy amaya andyamaya@nxglabs.in 
- separator
- button "+ Add recipients"
- text: Fields  signature   stamp   initials   name   job title   company   date   text   text input   cells   checkbox   dropdown   radio button   image   email 
- contentinfo:
  - complementary:
    - paragraph: "All rights reserved © 2025 OpenSign™ ( version: v2.26.0 )"
```

# Test source

```ts
  3620 |   if (isVisible) {
  3621 |       console.log('"Copy widget to" is visible. Stopping the loop.');
  3622 |       break; // Exit loop once the element is visible
  3623 |   }
  3624 |
  3625 |   await page.waitForTimeout(500); // Small delay to prevent rapid clicking
  3626 | }
  3627 | await page.getByRole('button', { name: 'Apply' }).click();
  3628 |   await expect(page.locator('//div[@class="signYourselfBlock react-draggable react-draggable-dragged"]//div[@class="select-none-cls"]//span[text()="text input"]')).toBeVisible();
  3629 |   await page.locator('canvas').nth(1).click({
  3630 |     position: {
  3631 |       x: 49,
  3632 |       y: 71
  3633 |     }
  3634 |   });
  3635 |   await expect(page.locator('//div[@class="signYourselfBlock react-draggable"]//div[@class="select-none-cls"]//span[text()="text input"]')).toBeVisible();
  3636 |   await page.locator('canvas').nth(2).click({
  3637 |     position: {
  3638 |       x: 65,
  3639 |       y: 59
  3640 |     }
  3641 |   });
  3642 |   await expect(page.locator('//div[@class="signYourselfBlock react-draggable"]//div[@class="select-none-cls"]//span[text()="text input"]')).toBeVisible();
  3643 |   await page.getByRole('button', { name: 'Next' }).click();
  3644 |   await expect(page.locator("//dialog[@id='selectSignerModal']//h3[text()='Send Mail']")).toBeVisible({ timeout: 120000 });
  3645 | });
  3646 | test('Verify that textinput field widget Copy widget to all pages but last function correctly in request signature.', async ({ page }) => {
  3647 |   const commonSteps = new CommonSteps(page);
  3648 |   // Step 1: Navigate to Base URL and log in
  3649 |   await commonSteps.navigateToBaseUrl();
  3650 |   await commonSteps.login();
  3651 | //const title = await page.title()
  3652 |   //Expects page to have a heading with the name of dashboard.
  3653 | //expect(title).toBe('Dashboard - OpenSign™');
  3654 | await page.getByRole('menuitem', { name: 'Request signatures' }).click();
  3655 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA1144');
  3656 |   const fileChooserPromise = page.waitForEvent('filechooser');
  3657 | await page.locator('input[type="file"]').click();
  3658 | const fileChooser = await fileChooserPromise;
  3659 | await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample_Test_doc_line.pdf'));
  3660 | await page.locator('div').filter({ hasText: /^Signers\*Select\.\.\.$/ }).locator('svg').click();
  3661 | await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).waitFor({ timeout: 90000 });
  3662 | await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).click();
  3663 | await page.locator('input[name="Name"]').click();
  3664 | await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); // Wait up to 90s
  3665 | await page.getByRole('button', { name: 'Next' }).click();
  3666 | await page.waitForLoadState("networkidle");
  3667 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  3668 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  3669 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  3670 | await page.locator('//span[normalize-space()=\'signature\']').hover();
  3671 | await page.mouse.down();
  3672 | await page.mouse.move(600, 300)
  3673 | await page.mouse.up();
  3674 | try {
  3675 |   const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  3676 |
  3677 |   for (let i = 0; i < 5; i++) { // Retry up to 5 times
  3678 |       if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  3679 |       
  3680 |           console.log("signature widget dragged and dropped");
  3681 |           break; // Exit the loop if successfully clicked
  3682 |       } else {
  3683 |           console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  3684 |           await page.locator('//span[normalize-space()="signature"]').hover();
  3685 |           await page.mouse.down();
  3686 |           await page.mouse.move(800, 300);
  3687 |           await page.mouse.up();
  3688 |           
  3689 |           // Wait a bit before checking again
  3690 |           await page.waitForTimeout(1000);
  3691 |       }
  3692 |   
  3693 |       if (i === 5) {
  3694 |           console.log("signature widget did not become visible on the document after multiple attempts.");
  3695 |       }
  3696 |   }
  3697 | } catch (error) {
  3698 |   console.log("Element not found or not interactable, continuing execution.");
  3699 |  
  3700 | }
  3701 |
  3702 | await page.locator('//span[normalize-space()=\'text input\']').hover();
  3703 | await page.mouse.down();
  3704 | await page.mouse.move(600, 300)
  3705 | await page.mouse.up();
  3706 | while (true) {
  3707 |   await page.locator('//i[@class="fa-light fa-copy icon"]').dblclick();
  3708 |   
  3709 |   const isVisible = await page.locator('//h3[text()="Copy widget to"]').isVisible();
  3710 |   
  3711 |   if (isVisible) {
  3712 |       console.log('"Copy widget to" is visible. Stopping the loop.');
  3713 |       break; // Exit loop once the element is visible
  3714 |   }
  3715 |
  3716 |   await page.waitForTimeout(500); // Small delay to prevent rapid clicking
  3717 | }
  3718 | await page.getByText('All pages but last').click();
  3719 | await page.getByRole('button', { name: 'Apply' }).click();
> 3720 |   await expect(page.locator('//div[@class="signYourselfBlock react-draggable react-draggable-dragged"]//div[@class="select-none-cls"]//span[text()="text input"]')).toBeVisible();
       |                                                                                                                                                                     ^ Error: Timed out 5000ms waiting for expect(locator).toBeVisible()
  3721 |   await page.locator('canvas').nth(1).click({
  3722 |     position: {
  3723 |       x: 49,
  3724 |       y: 71
  3725 |     }
  3726 |   });
  3727 |   await expect(page.locator('//div[@class="signYourselfBlock react-draggable"]//div[@class="select-none-cls"]//span[text()="text input"]')).toBeVisible();
  3728 |   await page.locator('canvas').nth(2).click({
  3729 |     position: {
  3730 |       x: 65,
  3731 |       y: 59
  3732 |     }
  3733 |   });
  3734 |   await expect(page.locator('//div[@class="signYourselfBlock react-draggable"]//div[@class="select-none-cls"]//span[text()="text input"]')).not.toBeVisible();
  3735 |   await page.getByRole('button', { name: 'Next' }).click();
  3736 |   await expect(page.locator("//dialog[@id='selectSignerModal']//h3[text()='Send Mail']")).toBeVisible({ timeout: 120000 });
  3737 | });
  3738 | test('Verify that textinput field widget Copy widget to all pages but first function correctly in request signature.', async ({ page }) => {
  3739 |   const commonSteps = new CommonSteps(page);
  3740 |   // Step 1: Navigate to Base URL and log in
  3741 |   await commonSteps.navigateToBaseUrl();
  3742 |   await commonSteps.login();
  3743 | //const title = await page.title()
  3744 |   //Expects page to have a heading with the name of dashboard.
  3745 | //expect(title).toBe('Dashboard - OpenSign™');
  3746 | await page.getByRole('menuitem', { name: 'Request signatures' }).click();
  3747 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA1144');
  3748 |   const fileChooserPromise = page.waitForEvent('filechooser');
  3749 | await page.locator('input[type="file"]').click();
  3750 | const fileChooser = await fileChooserPromise;
  3751 | await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample_Test_doc_line.pdf'));
  3752 | await page.locator('div').filter({ hasText: /^Signers\*Select\.\.\.$/ }).locator('svg').click();
  3753 | await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).waitFor({ timeout: 90000 });
  3754 | await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).click();
  3755 | await page.locator('input[name="Name"]').click();
  3756 | await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); // Wait up to 90s
  3757 | await page.getByRole('button', { name: 'Next' }).click();
  3758 | await page.waitForLoadState("networkidle");
  3759 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  3760 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  3761 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  3762 | await page.locator('//span[normalize-space()=\'signature\']').hover();
  3763 | await page.mouse.down();
  3764 | await page.mouse.move(600, 300)
  3765 | await page.mouse.up();
  3766 | try {
  3767 |   const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  3768 |
  3769 |   for (let i = 0; i < 5; i++) { // Retry up to 5 times
  3770 |       if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  3771 |       
  3772 |           console.log("signature widget dragged and dropped");
  3773 |           break; // Exit the loop if successfully clicked
  3774 |       } else {
  3775 |           console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  3776 |           await page.locator('//span[normalize-space()="signature"]').hover();
  3777 |           await page.mouse.down();
  3778 |           await page.mouse.move(800, 300);
  3779 |           await page.mouse.up();
  3780 |           
  3781 |           // Wait a bit before checking again
  3782 |           await page.waitForTimeout(1000);
  3783 |       }
  3784 |   
  3785 |       if (i === 5) {
  3786 |           console.log("signature widget did not become visible on the document after multiple attempts.");
  3787 |       }
  3788 |   }
  3789 | } catch (error) {
  3790 |   console.log("Element not found or not interactable, continuing execution.");
  3791 |  
  3792 | }
  3793 | await page.locator('canvas').nth(2).click({
  3794 |   position: {
  3795 |     x: 65,
  3796 |     y: 59
  3797 |   }
  3798 | });
  3799 | await page.locator('//span[normalize-space()="text input"]').hover();
  3800 |           await page.mouse.down();
  3801 |           await page.mouse.move(800, 360);
  3802 |           await page.mouse.up();
  3803 | while (true) {
  3804 |   await page.locator('//i[@class="fa-light fa-copy icon"]').dblclick();
  3805 |   const isVisible = await page.locator('//h3[text()="Copy widget to"]').isVisible();
  3806 |   if (isVisible) {
  3807 |       console.log('"Copy widget to" is visible. Stopping the loop.');
  3808 |       break; // Exit loop once the element is visible
  3809 |   }
  3810 |   await page.waitForTimeout(500); // Small delay to prevent rapid clicking
  3811 | }
  3812 | await page.getByText('All pages but first').click();
  3813 | await page.getByRole('button', { name: 'Apply' }).click();
  3814 |   await expect(page.locator('//div[@class="signYourselfBlock react-draggable"]//span[text()="text input"]')).toBeVisible();
  3815 |   await page.locator('canvas').nth(1).click({
  3816 |     position: {
  3817 |       x: 49,
  3818 |       y: 71
  3819 |     }
  3820 |   });
```