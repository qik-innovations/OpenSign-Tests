# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Templates >> Verify that an existing Team Plan user can create a template using all advanced fields in the Create New Template form.
- Location: /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/CreateTemplate.spec.js:357:1

# Error details

```
Error: locator.click: Test timeout of 120000ms exceeded.
Call log:
  - waiting for locator('//span[@class="ml-3 lg:ml-4 text-start" and text()="Templates"]')

    at /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/CreateTemplate.spec.js:363:89
```

# Page snapshot

```yaml
- banner:
  - button ""
  - img "logo"
  - text: TEAM
  - button ""
  - img "img"
  - button "Pravin Testing account"
  - button ""
- complementary:
  - img "Profile"
  - paragraph: Pravin Testing account
  - paragraph: OpenSign pvt ltd
  - navigation "OpenSign Sidebar Navigation":
    - menubar "OpenSign Sidebar Navigation":
      - menuitem "Dashboard"
      - menuitem "Sign yourself"
      - menuitem "Request signatures"
      - button " Templates"
      - menuitem "OpenSign™ Drive"
      - button " Documents"
      - menuitem "Contactbook"
      - button " Settings"
  - link "OpenSign's Github"
  - link "OpenSign's LinkedIn"
  - link "OpenSign's Twitter"
  - link "OpenSign's Discord"
- text:  Sign yourself Use this option to sign the document yourself without adding others  Request signatures Use this option to request signatures from others and yourself together.  Need your signature 27
- superscript: "?"
- text:  Out for signatures 187
- superscript: "?"
- text: Recent signature requests
- button "Search": 
- table:
  - rowgroup:
    - row "Title File Owner Signers Action":
      - cell "Title"
      - cell "File"
      - cell "Owner"
      - cell "Signers"
      - cell "Action"
  - rowgroup:
    - row "Sample-joining-letter Expires 17-Jul-2025 Download Pravin Testing account View  sign":
      - cell "Sample-joining-letter Expires 17-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell " sign":
        - button " sign"
    - row "Offer Letter Expires 17-Jul-2025 Download Pravin Testing account View  sign":
      - cell "Offer Letter Expires 17-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell " sign":
        - button " sign"
    - row "Sample-joining-letter Expires 17-Jul-2025 Download Pravin Testing account View  sign":
      - cell "Sample-joining-letter Expires 17-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell " sign":
        - button " sign"
    - row "Sample-joining-letter Expires 17-Jul-2025 Download Pravin Testing account View  sign":
      - cell "Sample-joining-letter Expires 17-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell " sign":
        - button " sign"
    - row "Sample-joining-letter Expires 17-Jul-2025 Download Pravin Testing account View  sign":
      - cell "Sample-joining-letter Expires 17-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell " sign":
        - button " sign"
- button "Prev"
- button "1"
- button "2"
- button "3"
- button "4"
- button "5"
- button "6"
- button "Next"
- text: Recently sent for signatures
- button "Search": 
- table:
  - rowgroup:
    - row "Title File Owner Signers Action":
      - cell "Title"
      - cell "File"
      - cell "Owner"
      - cell "Signers"
      - cell "Action"
  - rowgroup:
    - row "Nu-international-application-form Expires 24-Jul-2025 Download Pravin Testing account View   ":
      - cell "Nu-international-application-form Expires 24-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample document Self sign Expires 23-Jul-2025 Download Pravin Testing account View   ":
      - cell "Sample document Self sign Expires 23-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample document Self sign Expires 23-Jul-2025 Download Pravin Testing account View   ":
      - cell "Sample document Self sign Expires 23-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample document Self sign Expires 23-Jul-2025 Download Pravin Testing account View   ":
      - cell "Sample document Self sign Expires 23-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Create template Expires 10-Jul-2025 Download Pravin Testing account View   ":
      - cell "Create template Expires 10-Jul-2025"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell "  ":
        - button ""
        - button ""
        - button ""
- button "Prev"
- button "1"
- button "2"
- button "3"
- button "4"
- button "Next"
- text: Drafts
- searchbox "Search documents…"
- table:
  - rowgroup:
    - row "Title Note Folder File Owner Signers Action":
      - cell "Title"
      - cell "Note"
      - cell "Folder"
      - cell "File"
      - cell "Owner"
      - cell "Signers"
      - cell "Action"
  - rowgroup:
    - row "Sample-joining-letter Note to myself OpenSign™ Drive Download Pravin Testing account View   ":
      - cell "Sample-joining-letter"
      - cell "Note to myself":
        - paragraph: Note to myself
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample Test Doc Line Note to myself OpenSign™ Drive Download Pravin Testing account -   ":
      - cell "Sample Test Doc Line"
      - cell "Note to myself":
        - paragraph: Note to myself
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "-"
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample-joining-letter Note to myself OpenSign™ Drive Download Pravin Testing account View   ":
      - cell "Sample-joining-letter"
      - cell "Note to myself":
        - paragraph: Note to myself
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample-joining-letter Note to myself OpenSign™ Drive Download Pravin Testing account View   ":
      - cell "Sample-joining-letter"
      - cell "Note to myself":
        - paragraph: Note to myself
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample Test Doc Line Note to myself OpenSign™ Drive Download Pravin Testing account View   ":
      - cell "Sample Test Doc Line"
      - cell "Note to myself":
        - paragraph: Note to myself
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "Pravin Testing account"
      - cell "View":
        - button "View"
      - cell "  ":
        - button ""
        - button ""
        - button ""
- button "Prev"
- button "1"
- button "2"
- button "3"
- button "4"
- button "Next"
- contentinfo:
  - complementary:
    - paragraph: "All rights reserved © 2025 OpenSign™ ( version: v2.26.0 )"
```

# Test source

```ts
  263 |   await page.getByRole('button', { name: 'Next' }).click();
  264 |   await page.waitForLoadState("networkidle");
  265 |   await page.getByLabel('Close').click();
  266 |   await page.getByRole('button', { name: '+ Add role' }).click();
  267 |   await page.locator('//form[@class="flex flex-col"]//input[@placeholder="Role 1"]').fill('HR');
  268 |   await page.locator('//button[@type="submit" and @class="op-btn op-btn-primary" and text()="Add"]').click();
  269 |   await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  270 |   await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  271 |    await page.waitForLoadState("networkidle");
  272 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  273 | await page.waitForLoadState("networkidle");
  274 | await page.locator('//span[normalize-space()=\'signature\']').hover();
  275 | await page.mouse.down();
  276 | await page.mouse.move(600, 300)
  277 | await page.mouse.up()
  278 | try {
  279 |   const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  280 |
  281 |   for (let i = 0; i < 5; i++) { // Retry up to 5 times
  282 |       if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  283 |       
  284 |           console.log("signature widget dragged and dropped");
  285 |           break; // Exit the loop if successfully clicked
  286 |       } else {
  287 |           console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  288 |   
  289 |           await page.locator('//span[normalize-space()="signature"]').hover();
  290 |           await page.mouse.down();
  291 |           await page.mouse.move(800, 300);
  292 |           await page.mouse.up();
  293 |           
  294 |           // Wait a bit before checking again
  295 |           await page.waitForTimeout(1000);
  296 |       }
  297 |   
  298 |       if (i === 5) {
  299 |           console.log("signature widget did not become visible on the document after multiple attempts.");
  300 |       }
  301 |   }
  302 | } catch (error) {
  303 |   console.log("Element not found or not interactable, continuing execution.");
  304 |  
  305 | }
  306 | await page.getByRole('button', { name: '+ Add role' }).click();
  307 | await page.locator('//form[@class="flex flex-col"]//input[@placeholder="Role 2"]').fill('Manager');
  308 | await page.locator('//button[@type="submit" and @class="op-btn op-btn-primary" and text()="Add"]').click();
  309 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  310 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  311 |  await page.waitForLoadState("networkidle");
  312 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  313 | await page.waitForLoadState("networkidle");
  314 | await page.locator('//span[normalize-space()=\'signature\']').hover();
  315 | await page.mouse.down();
  316 | await page.mouse.move(600, 300)
  317 | await page.mouse.up()
  318 | try {
  319 |   const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  320 |
  321 |   for (let i = 0; i < 5; i++) { // Retry up to 5 times
  322 |       if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  323 |       
  324 |           console.log("signature widget dragged and dropped");
  325 |           break; // Exit the loop if successfully clicked
  326 |       } else {
  327 |           console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  328 |   
  329 |           await page.locator('//span[normalize-space()="signature"]').hover();
  330 |           await page.mouse.down();
  331 |           await page.mouse.move(800, 300);
  332 |           await page.mouse.up();
  333 |           
  334 |           // Wait a bit before checking again
  335 |           await page.waitForTimeout(1000);
  336 |       }
  337 |   
  338 |       if (i === 5) {
  339 |           console.log("signature widget did not become visible on the document after multiple attempts.");
  340 |       }
  341 |   }
  342 | } catch (error) {
  343 |   console.log("Element not found or not interactable, continuing execution.");
  344 |  
  345 | }
  346 | await page.getByRole('button', { name: 'Next' }).click();
  347 |   await page.getByRole('button', { name: 'Bulk send' }).click();
  348 |   await page.locator('#selectSignerModal div').filter({ hasText: /^HR$/ }).getByPlaceholder('Enter Email...').click();
  349 |   await page.locator('#selectSignerModal div').filter({ hasText: /^HR$/ }).getByPlaceholder('Enter Email...').fill('pravin+677@nxglabs.in');
  350 |   await page.locator('#selectSignerModal div').filter({ hasText: /^Manager$/ }).getByPlaceholder('Enter Email...').click();
  351 |   await page.locator('#selectSignerModal div').filter({ hasText: /^Manager$/ }).getByPlaceholder('Enter Email...').fill('pravin+689@nxglabs.in');
  352 |   await page.getByRole('button', { name: ' Send' }).click();
  353 |   await expect(page.locator('#selectSignerModal')).toContainText('Please upgrade to Professional or Team plan to use bulk send.');
  354 |   await expect(page.locator('#selectSignerModal')).toContainText('Upgrade now');
  355 |   await page.locator('#selectSignerModal').getByRole('button', { name: 'Upgrade now' }).click();
  356 | });
  357 | test('Verify that an existing Team Plan user can create a template using all advanced fields in the Create New Template form.', async ({ page }) => {
  358 |   const commonSteps = new CommonSteps(page);
  359 |     // Step 1: Navigate to Base URL and log in
  360 |     await commonSteps.navigateToBaseUrl();
  361 |     await commonSteps.login();
  362 |     
> 363 |   await page.locator('//span[@class="ml-3 lg:ml-4 text-start" and text()="Templates"]').click();
      |                                                                                         ^ Error: locator.click: Test timeout of 120000ms exceeded.
  364 |   await page.getByRole('menuitem', { name: 'Create template' }).click();
  365 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA11');
  366 |   const fileChooserPromise = page.waitForEvent('filechooser');
  367 |   await page.locator('input[type="file"]').click();
  368 |   const fileChooser = await fileChooserPromise;
  369 |   await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample-Joining-Letter.pdf'));
  370 |   await page.locator("//input[@name='SendinOrder' and @value='false']").click();
  371 |   await page.getByText('Advanced options').click();
  372 |   await page.locator('input[name="TimeToCompleteDays"]').fill('2');
  373 |   await page.locator('.css-n9qnu9').click();
  374 |   await page.getByRole('option', { name: 'Pravin Testing account<pravin' }).click();
  375 |   await page.locator('input[name="IsEnableOTP"]').nth(1).check();
  376 |  // await page.locator('input[name="IsTourEnabled"]').nth(1).check();
  377 |   //await page.locator('div').filter({ hasText: /^Notify on signaturesYesNo$/ }).getByRole('radio').nth(1).check();
  378 |   //await page.locator('div:nth-child(5) > div > div > .mr-\\[2px\\]').first().check();
  379 |   
  380 |   await page.locator('input[name="RedirectUrl"]').fill('https://staging-app.opensignlabs.com/');
  381 |   await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); 
  382 |   await page.getByRole('button', { name: 'Next' }).click();
  383 |   await page.getByRole('button', { name: '', exact: true }).click();
  384 |   await expect(page.locator('input[name="Name"]')).toHaveValue('Sample-joining-letter');
  385 |   await expect(page.getByLabel('Note')).toHaveValue('Please review and sign this document');
  386 |  // await expect(page.locator('input[name="SendinOrder"]').nth(1)).toBeChecked();
  387 |  //await expect(page.locator('input[name="IsEnableOTP"]').first()).toBeChecked();
  388 |  // await expect(page.locator('input[name="IsTourEnabled"]').first()).not.toBeChecked();
  389 |   //await expect(page.locator('input[name="IsTourEnabled"]').nth(1)).toBeChecked();
  390 |  // await page.locator('div').filter({ hasText: /^Notify on signatures YesNo$/ }).getByRole('radio').nth(1).check();
  391 |   await expect(page.locator('input[name="RedirectUrl"]')).toHaveValue('https://staging-app.opensignlabs.com/');
  392 |   await expect(page.locator('input[name="TimeToCompleteDays"]')).toHaveValue('2');
  393 |   await page.getByRole('button', { name: 'Submit' }).click();
  394 |   await page.getByRole('button', { name: '+ Add role' }).click();
  395 |   await page.locator('//form[@class="flex flex-col"]//input[@placeholder="Role 1"]').fill('HR');
  396 |   await page.locator('//button[@type="submit" and @class="op-btn op-btn-primary" and text()="Add"]').click();
  397 |   await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  398 |   await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  399 |    await page.waitForLoadState("networkidle");
  400 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  401 | await page.waitForLoadState("networkidle");
  402 | await page.locator('//span[normalize-space()=\'signature\']').hover();
  403 | await page.mouse.down();
  404 | await page.mouse.move(600, 300)
  405 | await page.mouse.up();
  406 | try {
  407 |   const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  408 |
  409 |   for (let i = 0; i < 5; i++) { // Retry up to 5 times
  410 |       if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  411 |       
  412 |           console.log("signature widget dragged and dropped");
  413 |           break; // Exit the loop if successfully clicked
  414 |       } else {
  415 |           console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  416 |   
  417 |           await page.locator('//span[normalize-space()="signature"]').hover();
  418 |           await page.mouse.down();
  419 |           await page.mouse.move(800, 300);
  420 |           await page.mouse.up();
  421 |           
  422 |           // Wait a bit before checking again
  423 |           await page.waitForTimeout(1000);
  424 |       }
  425 |   
  426 |       if (i === 5) {
  427 |           console.log("signature widget did not become visible on the document after multiple attempts.");
  428 |       }
  429 |   }
  430 | } catch (error) {
  431 |   console.log("Element not found or not interactable, continuing execution.");
  432 |  
  433 | }
  434 | await page.waitForLoadState("networkidle");
  435 | await page.getByRole('button', { name: 'Next' }).click();
  436 | await page.getByRole('button', { name: '✕' }).click();
  437 |   await expect(page.locator('tbody')).toContainText('Sample-joining-letter');
  438 |   await expect(page.locator('tbody')).toContainText('Download');
  439 |   await expect(page.locator('tbody')).toContainText('Pravin Testing account');
  440 |   await page.getByRole('button', { name: 'View' }).first().click();
  441 |   await expect(page.locator('#selectSignerModal')).toContainText('Roles');
  442 |   await expect(page.locator('#selectSignerModal')).toContainText('Email');
  443 |   await page.getByRole('button', { name: '✕' }).click();
  444 |
  445 | });
  446 | test('Verify that a Team Plan user can create a template, make it public, and sign the document through the public template.', async ({ page }) => {
  447 |   const commonSteps = new CommonSteps(page);
  448 |     // Step 1: Navigate to Base URL and log in
  449 |     await commonSteps.navigateToBaseUrl();
  450 |     await commonSteps.login();
  451 |     
  452 |   await page.locator('//span[@class="ml-3 lg:ml-4 text-start" and text()="Templates"]').click();
  453 |   await page.getByRole('menuitem', { name: 'Create template' }).click();
  454 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA11');
  455 |   const fileChooserPromise = page.waitForEvent('filechooser');
  456 |   await page.locator('input[type="file"]').click();
  457 |   const fileChooser = await fileChooserPromise;
  458 |   await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample-Joining-Letter.pdf'));
  459 |   await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); 
  460 |   await page.getByRole('button', { name: 'Next' }).click();
  461 |   await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  462 |   await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  463 |    await page.waitForLoadState("networkidle");
```