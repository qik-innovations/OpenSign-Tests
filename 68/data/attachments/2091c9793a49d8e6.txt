# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Request signature >> Verify that the rotate page functions correctly in request signature.
- Location: /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/Request_Signature.spec.js:1722:1

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toMatchAriaSnapshot(expected)

Locator: locator('#renderList')
Expected: "- text: Pages
- button \"+ Add pages\"
- text: +     
- button
- text: 2 of 3
- button
- button \"Back\"
- button \"Next\"
- text: Recipients A Andy amaya andyamaya@nxglabs.in 
- separator
- button \"+ Add recipients\"
- text: Fields  signature   stamp   initials   name   job title   company   date   text   text input   checkbox   dropdown   radio button   image   email "
Received: <element not found>
Call log:
  - expect.toMatchAriaSnapshot with timeout 5000ms
  - waiting for locator('#renderList')
    - locator resolved to <div id="renderList" class="relative h-screen flex flex-col justify-between w-full overflow-y-auto">…</div>
    - unexpected value "- text: Pages Loading page… Loading page… Loading page…
- button "+ Add pages"
- text: +     
- button
- text: 2 of 3
- button
- button "Back"
- button "Next"
- text: Loading page… Recipients A Andy amaya andyamaya@nxglabs.in 
- separator
- button "+ Add recipients"
- text: Fields  signature   stamp   initials   name   job title   company   date   text   text input   checkbox   dropdown   radio button   image   email 
- contentinfo:
  - complementary:
    - paragraph: "All rights reserved © 2025 OpenSign™ ( version: v2.18.0 )""

    at /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/Request_Signature.spec.js:1775:45
```

# Test source

```ts
  1675 | await page.mouse.down();
  1676 |
  1677 | await page.mouse.move(600, 450)
  1678 | await page.mouse.up();
  1679 | await page.getByRole('button', { name: 'Next' }).click();
  1680 |
  1681 | //await expect(page.locator('#selectSignerModal')).toContainText('Are you sure you want to send out this document for signatures?');
  1682 | await page.getByRole('button', { name: 'Send' }).click();
  1683 | });
  1684 | test('Verify that the delete page functions correctly in request signature.', async ({ page }) => {
  1685 |   const commonSteps = new CommonSteps(page);
  1686 |   // Step 1: Navigate to Base URL and log in
  1687 |   await commonSteps.navigateToBaseUrl();
  1688 |   await commonSteps.login();
  1689 | //const title = await page.title()
  1690 |   //Expects page to have a heading with the name of dashboard.
  1691 | //expect(title).toBe('Dashboard - OpenSign™');
  1692 |
  1693 | await page.getByRole('menuitem', { name: 'Request signatures' }).click();
  1694 |   await page.locator('input[name="Name"]').click();
  1695 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA1144');
  1696 |   await page.locator('input[name="Note"]').click();
  1697 |   const fileChooserPromise = page.waitForEvent('filechooser');
  1698 | await page.locator('input[type="file"]').click();
  1699 | const fileChooser = await fileChooserPromise;
  1700 | await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample_Test_doc_line.pdf'));
  1701 | await page.locator('div').filter({ hasText: /^Signers\*Select\.\.\.$/ }).locator('svg').click();
  1702 | await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).waitFor({ timeout: 90000 });
  1703 | await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).click();
  1704 | await page.locator('input[name="Name"]').click();
  1705 | await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); // Wait up to 90s
  1706 | await page.getByRole('button', { name: 'Next' }).click();
  1707 | await page.waitForLoadState("networkidle");
  1708 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  1709 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  1710 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  1711 | await page.waitForLoadState("networkidle");
  1712 | await expect(page.locator('#renderList')).toContainText('1 of 3');
  1713 |   await page.locator('#container div').first().click();
  1714 |   await page.getByTitle('Delete page').locator('i').click();
  1715 |   await expect(page.getByRole('heading')).toContainText('Delete page');
  1716 |   await expect(page.locator('#selectSignerModal')).toContainText('Are you sure you want to delete this page?');
  1717 |   await expect(page.locator('#selectSignerModal')).toContainText('Note: Once you delete this page, you cannot undo.');
  1718 |   await page.getByRole('button', { name: 'Yes' }).click();
  1719 |   await expect(page.locator('#renderList')).toContainText('1 of 2');
  1720 |
  1721 | });
  1722 | test('Verify that the rotate page functions correctly in request signature.', async ({ page }) => {
  1723 |   const commonSteps = new CommonSteps(page);
  1724 |   // Step 1: Navigate to Base URL and log in
  1725 |   await commonSteps.navigateToBaseUrl();
  1726 |   await commonSteps.login();
  1727 | //const title = await page.title()
  1728 |   //Expects page to have a heading with the name of dashboard.
  1729 | //expect(title).toBe('Dashboard - OpenSign™');
  1730 |
  1731 | await page.getByRole('menuitem', { name: 'Request signatures' }).click();
  1732 |   await page.locator('input[name="Name"]').click();
  1733 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA1144');
  1734 |   await page.locator('input[name="Note"]').click();
  1735 |   const fileChooserPromise = page.waitForEvent('filechooser');
  1736 | await page.locator('input[type="file"]').click();
  1737 | const fileChooser = await fileChooserPromise;
  1738 | await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample_Test_doc_line.pdf'));
  1739 | await page.locator('div').filter({ hasText: /^Signers\*Select\.\.\.$/ }).locator('svg').click();
  1740 | await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).waitFor({ timeout: 90000 });
  1741 | await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).click();
  1742 | await page.locator('input[name="Name"]').click();
  1743 | await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); // Wait up to 90s
  1744 | await page.getByRole('button', { name: 'Next' }).click();
  1745 | await page.waitForLoadState("networkidle");
  1746 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  1747 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  1748 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  1749 | await page.waitForLoadState("networkidle");
  1750 | await expect(page.locator('#renderList')).toContainText('1 of 3');
  1751 |   await page.locator('canvas').nth(1).click({
  1752 |     position: {
  1753 |       x: 80,
  1754 |       y: 133
  1755 |     }
  1756 |   });
  1757 |   await expect(page.locator('#renderList')).toContainText('2 of 3');
  1758 |   await page.getByTitle('Rotate right').locator('i').click();
  1759 |   await page.getByTitle('Rotate right').locator('i').click();
  1760 |  /* await expect(page.locator('#renderList')).toMatchAriaSnapshot(`
  1761 |     - text: Pages
  1762 |     - button "+ Add pages"
  1763 |     - text: +     
  1764 |     - button
  1765 |     - text: 2 of 3
  1766 |     - button
  1767 |     - button "Back"
  1768 |     - button "Next"
  1769 |     - text: Recipients A Andy amaya andyamaya@nxglabs.in 
  1770 |     - separator
  1771 |     - button "+ Add recipients"
  1772 |     - text: Fields  signature   stamp   initials   name   job title   company   date   text   text input   checkbox   dropdown   radio button   image   email 
  1773 |     `);*/
  1774 |   await page.getByTitle('Rotate right').locator('i').click();
> 1775 |   await expect(page.locator('#renderList')).toMatchAriaSnapshot(`
       |                                             ^ Error: Timed out 5000ms waiting for expect(locator).toMatchAriaSnapshot(expected)
  1776 |     - text: Pages
  1777 |     - button "+ Add pages"
  1778 |     - text: +     
  1779 |     - button
  1780 |     - text: 2 of 3
  1781 |     - button
  1782 |     - button "Back"
  1783 |     - button "Next"
  1784 |     - text: Recipients A Andy amaya andyamaya@nxglabs.in 
  1785 |     - separator
  1786 |     - button "+ Add recipients"
  1787 |     - text: Fields  signature   stamp   initials   name   job title   company   date   text   text input   checkbox   dropdown   radio button   image   email 
  1788 |     `);
  1789 |   await page.locator('#renderList div').filter({ hasText: 'PagesAdd pages2 of' }).first().click();
  1790 |   await expect(page.locator('#renderList')).toMatchAriaSnapshot(`
  1791 |     - text: Pages
  1792 |     - button "+ Add pages"
  1793 |     - text: +     
  1794 |     - button
  1795 |     - text: 2 of 3
  1796 |     - button
  1797 |     - button "Back"
  1798 |     - button "Next"
  1799 |     - text: Recipients A Andy amaya andyamaya@nxglabs.in 
  1800 |     - separator
  1801 |     - button "+ Add recipients"
  1802 |     - text: Fields  signature   stamp   initials   name   job title   company   date   text   text input   checkbox   dropdown   radio button   image   email 
  1803 |     `); 
  1804 | await page.locator('//span[normalize-space()=\'signature\']').hover();
  1805 | await page.mouse.down();
  1806 | await page.mouse.move(600, 200)
  1807 | await page.mouse.up();
  1808 | try {
  1809 |   const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  1810 |
  1811 |   for (let i = 0; i < 5; i++) { // Retry up to 5 times
  1812 |       if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  1813 |       
  1814 |           console.log("signature widget dragged and dropped");
  1815 |           break; // Exit the loop if successfully clicked
  1816 |       } else {
  1817 |           console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  1818 |   
  1819 |           await page.locator('//span[normalize-space()="signature"]').hover();
  1820 |           await page.mouse.down();
  1821 |           await page.mouse.move(600, 200);
  1822 |           await page.mouse.up();
  1823 |           
  1824 |           // Wait a bit before checking again
  1825 |           await page.waitForTimeout(1000);
  1826 |       }
  1827 |   
  1828 |       if (i === 5) {
  1829 |           console.log("signature widget did not become visible on the document after multiple attempts.");
  1830 |       }
  1831 |   }
  1832 | } catch (error) {
  1833 |   console.log("Element not found or not interactable, continuing execution.");
  1834 |  
  1835 | }
  1836 | await page.locator('//span[normalize-space()=\'stamp\']').hover();
  1837 | await page.mouse.down();
  1838 | await page.mouse.move(700, 200)
  1839 | await page.mouse.up();
  1840 | await page.locator('//span[normalize-space()=\'initials\']').hover();
  1841 | await page.mouse.down();
  1842 | await page.mouse.move(800, 200)
  1843 | await page.mouse.up();
  1844 | await page.locator('//span[normalize-space()=\'name\']').hover();
  1845 | await page.mouse.down();
  1846 |
  1847 | await page.mouse.move(600, 260)
  1848 | await page.mouse.up();
  1849 | await page.locator('//span[normalize-space()=\'job title\']').hover();
  1850 | await page.mouse.down();
  1851 |
  1852 | await page.mouse.move(700, 260)
  1853 | await page.mouse.up();
  1854 | await page.locator('//span[normalize-space()=\'company\']').hover();
  1855 | await page.mouse.down();
  1856 | await page.mouse.move(800, 260)
  1857 | await page.mouse.up();
  1858 |
  1859 | await page.locator('//span[normalize-space()=\'date\']').hover();
  1860 | await page.mouse.down();
  1861 | await page.mouse.move(600, 290)
  1862 | await page.mouse.up();
  1863 | await page.locator('//span[normalize-space()=\'text input\']').hover();
  1864 | await page.mouse.down();
  1865 | await page.mouse.move(700, 290)
  1866 | await page.mouse.up();
  1867 | await page.locator('//span[normalize-space()=\'checkbox\']').hover();
  1868 | await page.mouse.down();
  1869 | await page.mouse.move(800, 290)
  1870 | await page.mouse.up();
  1871 | page.locator("//button[@type='submit' and text()='Save']").click();
  1872 | await page.locator('//span[normalize-space()=\'image\']').hover();
  1873 | await page.mouse.down();
  1874 | await page.mouse.move(600, 350)
  1875 | await page.mouse.up();
```