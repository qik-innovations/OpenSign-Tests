# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Verify that the document created from a template bulksend appears in the Recently Sent for Signatures section on the dashboard.
- Location: /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/Dashboard.spec.js:722:1

# Error details

```
Error: locator.fill: Test timeout of 120000ms exceeded.
Call log:
  - waiting for getByPlaceholder('User')

    at /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/Dashboard.spec.js:742:39
```

# Page snapshot

```yaml
- text: "New feature: Teams plan users can now integrate their own AWS S3 buckets for file storage — Setup now. "
- button ""
- img "logo"
- text: TEAM
- button ""
- img "img"
- button "Pravin Testing account"
- button ""
- complementary:
  - img "Profile"
  - paragraph: Pravin Testing account
  - paragraph: OpenSign pvt ltd
  - navigation "OpenSign Sidebar Navigation":
    - menubar "OpenSign Sidebar Navigation":
      - menuitem "Dashboard"
      - menuitem "Sign yourself"
      - menuitem "Request signatures"
      - button " Templates"
      - menu "Templates submenu":
        - menuitem "Create template"
        - menuitem "Manage templates"
        - menuitem "Embedding"
      - menuitem "OpenSign™ Drive"
      - button " Documents"
      - menuitem "Contactbook"
      - button " Settings"
  - link "OpenSign's Github"
  - link "OpenSign's LinkedIn"
  - link "OpenSign's Twitter"
  - link "OpenSign's Discord"
- text: Pages
- button "+ Add pages"
- text: +     
- button [disabled]
- text: 1 of 1
- button [disabled]
- button ""
- button "Back"
- button "Next"
- text: Roles
- superscript: "?"
- button "+ Add role"
- text: Fields  signature   stamp   initials   name   job title   company   date   text input   checkbox   dropdown   radio button   image   email 
- dialog:
  - heading "Add role" [level=3]
  - button "✕"
  - textbox "Role 1"
  - paragraph: "e.g: Customer, Hr, Director, Manager, Student, etc.."
  - button "Add"
  - button "Close"
- contentinfo:
  - complementary:
    - paragraph: "All rights reserved © 2025 OpenSign™ ( version: v2.15.0 )"
```

# Test source

```ts
  642 |   const commonSteps = new CommonSteps(page);
  643 |     // Step 1: Navigate to Base URL and log in
  644 |     await commonSteps.navigateToBaseUrl();
  645 |     await commonSteps.login();
  646 |   await page.locator('//span[@class="ml-3 lg:ml-4 text-start" and text()="Templates"]').click();
  647 |   await page.getByRole('menuitem', { name: 'Create template' }).click();
  648 |   const fileChooserPromise = page.waitForEvent('filechooser');
  649 |   await page.locator('input[type="file"]').click();
  650 |   const fileChooser = await fileChooserPromise;
  651 |   await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample-Joining-Letter.pdf'));
  652 |   await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); 
  653 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA11');
  654 |   await page.getByRole('button', { name: 'Next' }).click();
  655 | await page.waitForLoadState("networkidle");
  656 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  657 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  658 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  659 | await page.waitForLoadState("networkidle");
  660 |   await page.getByRole('button', { name: '+ Add role' }).click();
  661 |   await page.getByPlaceholder('User').fill('HR');
  662 |   await page.locator('//button[@type="submit" and @class="op-btn op-btn-primary" and text()="Add"]').click();
  663 |   await page.locator('//span[normalize-space()=\'signature\']').hover();
  664 |   await page.mouse.down();
  665 |   await page.mouse.move(600, 200)
  666 |   await page.mouse.up();
  667 |   try {
  668 |     const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  669 |   
  670 |     for (let i = 0; i < 5; i++) { // Retry up to 5 times
  671 |         if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  672 |         
  673 |             console.log("signature widget dragged and dropped");
  674 |             break; // Exit the loop if successfully clicked
  675 |         } else {
  676 |             console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  677 |     
  678 |             await page.locator('//span[normalize-space()="signature"]').hover();
  679 |             await page.mouse.down();
  680 |             await page.mouse.move(600, 200);
  681 |             await page.mouse.up();
  682 |             
  683 |             // Wait a bit before checking again
  684 |             await page.waitForTimeout(1000);
  685 |         }
  686 |     
  687 |         if (i === 5) {
  688 |             console.log("signature widget did not become visible on the document after multiple attempts.");
  689 |         }
  690 |     }
  691 |   } catch (error) {
  692 |     console.log("Element not found or not interactable, continuing execution.");
  693 |    
  694 |   }
  695 |
  696 | await page.getByRole('button', { name: 'Next' }).click();
  697 |   await expect(page.getByRole('heading')).toContainText('Create document');
  698 |   await page.getByRole('button', { name: 'Create document' }).click();
  699 |   await page.locator('.css-n9qnu9').click();
  700 |   await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).click();
  701 |   await page.locator('input[name="Name"]').click();
  702 |   await page.getByRole('button', { name: ' Next' }).click();
  703 |   await expect(page.locator('#selectSignerModal')).toContainText('Are you sure you want to send out this document for signatures?');
  704 |   await page.getByRole('button', { name: 'Send' }).click();
  705 |   await page.getByRole('menuitem', { name: 'Dashboard' }).click();
  706 | // Wait up to 90 seconds for the text to appear
  707 | await page.locator('#renderList').waitFor({ state: 'visible', timeout: 90000 });
  708 | // Now assert the text
  709 | await expect(page.locator('//div[@data-tut="tourreport2"]//div[text()="Recently sent for signatures"]')).toBeVisible({ timeout: 12000 });
  710 | await expect(page.locator('//div[@data-tut="tourreport2"]//div[@class="font-semibold"]').first()).toContainText('Offer Letter for QA11');
  711 | await expect(page.locator('//div[@data-tut="tourreport2"]//td[2]').first()).toContainText('Download');
  712 | await expect(page.locator('//div[@data-tut="tourreport2"]//td[3]').first()).toContainText('Pravin Testing account');  
  713 | await page.locator('//div[@data-tut="tourreport2"]//div[@role="button"and @title="Share"]').first().click();
  714 | await expect(page.locator('//div[@class="m-[20px]"]//div[1]//span[1]')).toContainText('andyamaya@nxglabs.in');
  715 | await page.locator('//div[@class="m-[20px]"]//div[1]//button[text()="Copy"]').click();
  716 | await expect(page.locator('//div[@class="m-[20px]"]//div[1]//button[2]')).toContainText('Copied');
  717 | await page.locator('//dialog[@id="selectSignerModal"]//div[1]//button[text()="✕"]').click();
  718 | await page.locator('//div[@data-tut="tourreport2"]//div[@role="button"and @title="View"]').first().click();
  719 | await expect(page.locator('//div[@class="flex flex-col"]//span[1]')).toBeVisible({ timeout: 120000 });
  720 | await expect(page.locator('//div[@class="flex flex-col"]//span[1]')).toContainText('Andy amaya');
  721 | });
  722 | test('Verify that the document created from a template bulksend appears in the Recently Sent for Signatures section on the dashboard.', async ({ page }) => {
  723 |   const commonSteps = new CommonSteps(page);
  724 |     // Step 1: Navigate to Base URL and log in
  725 |     await commonSteps.navigateToBaseUrl();
  726 |     await commonSteps.login();
  727 |   await page.locator('//span[@class="ml-3 lg:ml-4 text-start" and text()="Templates"]').click();
  728 |   await page.getByRole('menuitem', { name: 'Create template' }).click();
  729 |   const fileChooserPromise = page.waitForEvent('filechooser');
  730 |   await page.locator('input[type="file"]').click();
  731 |   const fileChooser = await fileChooserPromise;
  732 |   await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample-Joining-Letter.pdf'));
  733 |   await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); 
  734 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA11');
  735 |   await page.getByRole('button', { name: 'Next' }).click();
  736 | await page.waitForLoadState("networkidle");
  737 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  738 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  739 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  740 | await page.waitForLoadState("networkidle");
  741 |   await page.getByRole('button', { name: '+ Add role' }).click();
> 742 |   await page.getByPlaceholder('User').fill('HR');
      |                                       ^ Error: locator.fill: Test timeout of 120000ms exceeded.
  743 |   await page.locator('//button[@type="submit" and @class="op-btn op-btn-primary" and text()="Add"]').click();
  744 |   await page.locator('//span[normalize-space()=\'signature\']').hover();
  745 |   await page.mouse.down();
  746 |   await page.mouse.move(600, 200)
  747 |   await page.mouse.up();
  748 |   try {
  749 |     const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  750 |   
  751 |     for (let i = 0; i < 5; i++) { // Retry up to 5 times
  752 |         if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  753 |         
  754 |             console.log("signature widget dragged and dropped");
  755 |             break; // Exit the loop if successfully clicked
  756 |         } else {
  757 |             console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  758 |     
  759 |             await page.locator('//span[normalize-space()="signature"]').hover();
  760 |             await page.mouse.down();
  761 |             await page.mouse.move(600, 200);
  762 |             await page.mouse.up();
  763 |             
  764 |             // Wait a bit before checking again
  765 |             await page.waitForTimeout(1000);
  766 |         }
  767 |     
  768 |         if (i === 5) {
  769 |             console.log("signature widget did not become visible on the document after multiple attempts.");
  770 |         }
  771 |     }
  772 |   } catch (error) {
  773 |     console.log("Element not found or not interactable, continuing execution.");
  774 |    
  775 |   }
  776 |
  777 | await page.getByRole('button', { name: 'Next' }).click();
  778 |   await expect(page.getByRole('heading')).toContainText('Create document');
  779 |   await page.locator('//dialog[@id="selectSignerModal"]//button[text()="Bulk send"]').click();
  780 |   await page.locator('//dialog[@id="selectSignerModal"]//input[@type="email" and @placeholder="Enter Email..."]').fill("andyamaya@nxglabs.in");
  781 |   await page.locator('//dialog[@id="selectSignerModal"]//span[text()="Send"]').click();
  782 |   await page.getByRole('menuitem', { name: 'Dashboard' }).click();
  783 | // Wait up to 90 seconds for the text to appear
  784 | await page.locator('#renderList').waitFor({ state: 'visible', timeout: 90000 });
  785 | // Now assert the text
  786 | await expect(page.locator('//div[@data-tut="tourreport2"]//div[text()="Recently sent for signatures"]')).toBeVisible({ timeout: 12000 });
  787 | await expect(page.locator('//div[@data-tut="tourreport2"]//div[@class="font-semibold"]').first()).toContainText('Offer Letter for QA11');
  788 | await expect(page.locator('//div[@data-tut="tourreport2"]//td[2]').first()).toContainText('Download');
  789 | await expect(page.locator('//div[@data-tut="tourreport2"]//td[3]').first()).toContainText('Pravin Testing account');  
  790 | await page.locator('//div[@data-tut="tourreport2"]//div[@role="button"and @title="Share"]').first().click();
  791 | await expect(page.locator('//div[@class="m-[20px]"]//div[1]//span[1]')).toContainText('andyamaya@nxglabs.in');
  792 |
  793 | });
  794 |
  795 |
  796 | test('Verify that the user can rename and delete a document from the dashboard Recently sent for signatures.', async ({ page }) => {
  797 |   const commonSteps = new CommonSteps(page);
  798 |   // Step 1: Navigate to Base URL and log in
  799 |   await commonSteps.navigateToBaseUrl();
  800 |   await commonSteps.login();
  801 | //const title = await page.title()
  802 |   //Expects page to have a heading with the name of dashboard.
  803 | //expect(title).toBe('Dashboard - OpenSign™');
  804 | await page.getByRole('menuitem', { name: 'Request signatures' }).click();
  805 |   await page.locator('input[name="Name"]').click();
  806 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA1144');
  807 |   await page.locator('input[name="Note"]').click();
  808 |   const fileChooserPromise = page.waitForEvent('filechooser');
  809 | await page.locator('input[type="file"]').click();
  810 | const fileChooser = await fileChooserPromise;
  811 | await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample-Joining-Letter.pdf'));
  812 | await page.locator('div').filter({ hasText: /^Signers\*Select\.\.\.$/ }).locator('svg').click();
  813 | await page.getByRole('option', { name: 'Pravin Testing account<pravin' }).click();
  814 | await page.locator('input[name="Name"]').click();
  815 | await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); // Wait up to 90s
  816 | await page.getByRole('button', { name: 'Next' }).click();
  817 | await page.waitForLoadState("networkidle");
  818 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  819 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  820 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  821 | await page.locator('//span[normalize-space()=\'signature\']').hover();
  822 | await page.mouse.down();
  823 | await page.mouse.move(600, 300)
  824 | await page.mouse.up();
  825 | try {
  826 |   const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  827 |
  828 |   for (let i = 0; i < 5; i++) { // Retry up to 5 times
  829 |       if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  830 |       
  831 |           console.log("signature widget dragged and dropped");
  832 |           break; // Exit the loop if successfully clicked
  833 |       } else {
  834 |           console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  835 |   
  836 |           await page.locator('//span[normalize-space()="signature"]').hover();
  837 |           await page.mouse.down();
  838 |           await page.mouse.move(800, 300);
  839 |           await page.mouse.up();
  840 |           
  841 |           // Wait a bit before checking again
  842 |           await page.waitForTimeout(1000);
```