# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Verify that the document created from a template bulksend appears in the Recently Sent for Signatures section on the dashboard.
- Location: /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/Dashboard.spec.js:722:1

# Error details

```
Error: Timed out 12000ms waiting for expect(locator).toBeVisible()

Locator: locator('//div[@data-tut="tourreport2"]//div[text()="Recently sent for signatures"]')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 12000ms
  - waiting for locator('//div[@data-tut="tourreport2"]//div[text()="Recently sent for signatures"]')

    at /home/runner/work/OpenSign-Tests/OpenSign-Tests/tests/MainAppPages/Dashboard.spec.js:786:106
```

# Page snapshot

```yaml
- text: "New feature: Protect your account with Two-Factor Authentication (2FA) and enjoy the future of login with Passkeys — no passwords needed. — Setup now."
- img
- text: 
- button ""
- img "logo"
- text: TEAM
- button ""
- img "img"
- button "Pravin Testing account"
- button ""
- complementary:
  - img "Profile"
  - paragraph: Pravin Testing account
  - paragraph: OpenSign pvt ltd
  - navigation "OpenSign Sidebar Navigation":
    - menubar "OpenSign Sidebar Navigation":
      - menuitem "Dashboard"
      - menuitem "Sign yourself"
      - menuitem "Request signatures"
      - button " Templates"
      - menuitem "OpenSign™ Drive"
      - button " Documents"
      - menuitem "Contactbook"
      - button " Settings"
  - link "OpenSign's Github"
  - link "OpenSign's LinkedIn"
  - link "OpenSign's Twitter"
  - link "OpenSign's Discord"
- text: In-progress documents
- superscript: "?"
- table:
  - rowgroup:
    - row "Title Note Folder File Signers Action":
      - cell "Title"
      - cell "Note"
      - cell "Folder"
      - cell "File"
      - cell "Signers"
      - cell "Action"
  - rowgroup:
    - row "Offer Letter for QA11 Expires 15-May-2025 Please review and sign this document OpenSign™ Drive Download SENT andyamaya@nxglabs.in   ":
      - cell "Offer Letter for QA11 Expires 15-May-2025"
      - cell "Please review and sign this document":
        - paragraph: Please review and sign this document
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT andyamaya@nxglabs.in":
        - button "SENT"
        - text: andyamaya@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Offer Letter for QA11 Expires 15-May-2025 Please review and sign this document OpenSign™ Drive Download SENT andyamaya@nxglabs.in   ":
      - cell "Offer Letter for QA11 Expires 15-May-2025"
      - cell "Please review and sign this document":
        - paragraph: Please review and sign this document
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT andyamaya@nxglabs.in":
        - button "SENT"
        - text: andyamaya@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample-joining-letter Expires 15-May-2025 Please review and sign this document OpenSign™ Drive Download SENT andyamaya@nxglabs.in   ":
      - cell "Sample-joining-letter Expires 15-May-2025"
      - cell "Please review and sign this document":
        - paragraph: Please review and sign this document
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT andyamaya@nxglabs.in":
        - button "SENT"
        - text: andyamaya@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Create template Expires 15-May-2025 Create template sample Note OpenSign™ Drive Download SENT pravin+677@nxglabs.in SENT pravin+689@nxglabs.in   ":
      - cell "Create template Expires 15-May-2025"
      - cell "Create template sample Note":
        - paragraph: Create template sample Note
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT pravin+677@nxglabs.in SENT pravin+689@nxglabs.in":
        - button "SENT"
        - text: pravin+677@nxglabs.in
        - button "SENT"
        - text: pravin+689@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample-joining-letter Expires 15-May-2025 Please review and sign this document OpenSign™ Drive Download SENT andyamaya@nxglabs.in   ":
      - cell "Sample-joining-letter Expires 15-May-2025"
      - cell "Please review and sign this document":
        - paragraph: Please review and sign this document
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT andyamaya@nxglabs.in":
        - button "SENT"
        - text: andyamaya@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample-joining-letter Expires 15-May-2025 Please review and sign this document OpenSign™ Drive Download SENT pravin+testaccount@nxglabs.in   ":
      - cell "Sample-joining-letter Expires 15-May-2025"
      - cell "Please review and sign this document":
        - paragraph: Please review and sign this document
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT pravin+testaccount@nxglabs.in":
        - button "SENT"
        - text: pravin+testaccount@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample document Create document Expires 15-May-2025 Create document sample Note OpenSign™ Drive Download SENT pravin+markj@nxglabs.in   ":
      - cell "Sample document Create document Expires 15-May-2025"
      - cell "Create document sample Note":
        - paragraph: Create document sample Note
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT pravin+markj@nxglabs.in":
        - button "SENT"
        - text: pravin+markj@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample document Create document Expires 15-May-2025 Create document sample Note OpenSign™ Drive Download SENT pravin+markj@nxglabs.in SENT pravin+jimmy@nxglabs.in   ":
      - cell "Sample document Create document Expires 15-May-2025"
      - cell "Create document sample Note":
        - paragraph: Create document sample Note
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT pravin+markj@nxglabs.in SENT pravin+jimmy@nxglabs.in":
        - button "SENT"
        - text: pravin+markj@nxglabs.in
        - button "SENT"
        - text: pravin+jimmy@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample-joining-letter Expires 15-May-2025 Please review and sign this document OpenSign™ Drive Download SENT andyamaya@nxglabs.in   ":
      - cell "Sample-joining-letter Expires 15-May-2025"
      - cell "Please review and sign this document":
        - paragraph: Please review and sign this document
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT andyamaya@nxglabs.in":
        - button "SENT"
        - text: andyamaya@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
    - row "Sample document Create document Expires 15-May-2025 Create document sample Note OpenSign™ Drive Download SENT pravin+markj@nxglabs.in SENT pravin+jimmy@nxglabs.in   ":
      - cell "Sample document Create document Expires 15-May-2025"
      - cell "Create document sample Note":
        - paragraph: Create document sample Note
      - cell "OpenSign™ Drive"
      - cell "Download":
        - button "Download"
      - cell "SENT pravin+markj@nxglabs.in SENT pravin+jimmy@nxglabs.in":
        - button "SENT"
        - text: pravin+markj@nxglabs.in
        - button "SENT"
        - text: pravin+jimmy@nxglabs.in
      - cell "  ":
        - button ""
        - button ""
        - button ""
- button "Prev"
- button "1"
- button "2"
- button "Next"
- contentinfo:
  - complementary:
    - paragraph: "All rights reserved © 2025 OpenSign™ ( version: v2.19.2 )"
- button ""
```

# Test source

```ts
  686 |     
  687 |         if (i === 5) {
  688 |             console.log("signature widget did not become visible on the document after multiple attempts.");
  689 |         }
  690 |     }
  691 |   } catch (error) {
  692 |     console.log("Element not found or not interactable, continuing execution.");
  693 |    
  694 |   }
  695 |
  696 | await page.getByRole('button', { name: 'Next' }).click();
  697 |   //await expect(page.getByRole('heading')).toContainText('Create document');
  698 |   await page.getByRole('button', { name: 'Create document' }).click();
  699 |   await page.locator('.css-n9qnu9').click();
  700 |   await page.getByRole('option', { name: 'Andy amaya<andyamaya@nxglabs.' }).click();
  701 |  
  702 |   await page.getByRole('button', { name: ' Next' }).click();
  703 |   await expect(page.locator('#selectSignerModal')).toContainText('Are you sure you want to send out this document for signatures?');
  704 |   await page.getByRole('button', { name: 'Send' }).click();
  705 |   await page.getByRole('menuitem', { name: 'Dashboard' }).click();
  706 | // Wait up to 90 seconds for the text to appear
  707 | await page.locator('#renderList').waitFor({ state: 'visible', timeout: 90000 });
  708 | // Now assert the text
  709 | await expect(page.locator('//div[@data-tut="tourreport2"]//div[text()="Recently sent for signatures"]')).toBeVisible({ timeout: 12000 });
  710 | await expect(page.locator('//div[@data-tut="tourreport2"]//div[@class="font-semibold break-words"]').first()).toContainText('Offer Letter for QA11');
  711 | await expect(page.locator('//div[@data-tut="tourreport2"]//td[2]').first()).toContainText('Download');
  712 | await expect(page.locator('//div[@data-tut="tourreport2"]//td[3]').first()).toContainText('Pravin Testing account');  
  713 | await page.locator('//div[@data-tut="tourreport2"]//div[@role="button"and @title="Share"]').first().click();
  714 | await expect(page.locator('//div[@class="m-[20px]"]//div[1]//span[1]')).toContainText('andyamaya@nxglabs.in');
  715 | await page.locator('//div[@class="m-[20px]"]//div[1]//button[text()="Copy"]').click();
  716 | await expect(page.locator('//div[@class="m-[20px]"]//div[1]//button[2]')).toContainText('Copied');
  717 | await page.locator('//dialog[@id="selectSignerModal"]//div[1]//button[text()="✕"]').click();
  718 | await page.locator('//div[@data-tut="tourreport2"]//div[@role="button"and @title="View"]').first().click();
  719 | await expect(page.locator('//div[@class="flex flex-col"]//span[1]')).toBeVisible({ timeout: 120000 });
  720 | await expect(page.locator('//div[@class="flex flex-col"]//span[1]')).toContainText('Andy amaya');
  721 | });
  722 | test('Verify that the document created from a template bulksend appears in the Recently Sent for Signatures section on the dashboard.', async ({ page }) => {
  723 |   const commonSteps = new CommonSteps(page);
  724 |     // Step 1: Navigate to Base URL and log in
  725 |     await commonSteps.navigateToBaseUrl();
  726 |     await commonSteps.login();
  727 |   await page.locator('//span[@class="ml-3 lg:ml-4 text-start" and text()="Templates"]').click();
  728 |   await page.getByRole('menuitem', { name: 'Create template' }).click();
  729 |   const fileChooserPromise = page.waitForEvent('filechooser');
  730 |   await page.locator('input[type="file"]').click();
  731 |   const fileChooser = await fileChooserPromise;
  732 |   await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample-Joining-Letter.pdf'));
  733 |   await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); 
  734 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA11');
  735 |   await page.getByRole('button', { name: 'Next' }).click();
  736 | await page.waitForLoadState("networkidle");
  737 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  738 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  739 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  740 | await page.waitForLoadState("networkidle");
  741 |   await page.getByRole('button', { name: '+ Add role' }).click();
  742 |   await page.getByPlaceholder('Role 1').fill('HR');
  743 |   await page.locator('//button[@type="submit" and @class="op-btn op-btn-primary" and text()="Add"]').click();
  744 |   await page.locator('//span[normalize-space()=\'signature\']').hover();
  745 |   await page.mouse.down();
  746 |   await page.mouse.move(600, 200)
  747 |   await page.mouse.up();
  748 |   try {
  749 |     const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  750 |   
  751 |     for (let i = 0; i < 5; i++) { // Retry up to 5 times
  752 |         if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  753 |         
  754 |             console.log("signature widget dragged and dropped");
  755 |             break; // Exit the loop if successfully clicked
  756 |         } else {
  757 |             console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  758 |     
  759 |             await page.locator('//span[normalize-space()="signature"]').hover();
  760 |             await page.mouse.down();
  761 |             await page.mouse.move(600, 200);
  762 |             await page.mouse.up();
  763 |             
  764 |             // Wait a bit before checking again
  765 |             await page.waitForTimeout(1000);
  766 |         }
  767 |     
  768 |         if (i === 5) {
  769 |             console.log("signature widget did not become visible on the document after multiple attempts.");
  770 |         }
  771 |     }
  772 |   } catch (error) {
  773 |     console.log("Element not found or not interactable, continuing execution.");
  774 |    
  775 |   }
  776 |
  777 | await page.getByRole('button', { name: 'Next' }).click();
  778 |  // await expect(page.getByRole('heading')).toContainText('Create document');
  779 |   await page.locator('//dialog[@id="selectSignerModal"]//button[text()="Bulk send"]').click();
  780 |   await page.locator('//dialog[@id="selectSignerModal"]//input[@type="email" and @placeholder="Enter Email..."]').fill("andyamaya@nxglabs.in");
  781 |   await page.locator('//dialog[@id="selectSignerModal"]//span[text()="Send"]').click();
  782 |   await page.getByRole('menuitem', { name: 'Dashboard' }).click();
  783 | // Wait up to 90 seconds for the text to appear
  784 | await page.locator('#renderList').waitFor({ state: 'visible', timeout: 90000 });
  785 | // Now assert the text
> 786 | await expect(page.locator('//div[@data-tut="tourreport2"]//div[text()="Recently sent for signatures"]')).toBeVisible({ timeout: 12000 });
      |                                                                                                          ^ Error: Timed out 12000ms waiting for expect(locator).toBeVisible()
  787 | await expect(page.locator('//div[@data-tut="tourreport2"]//div[@class="font-semibold break-words"]').first()).toContainText('Offer Letter for QA11');
  788 | await expect(page.locator('//div[@data-tut="tourreport2"]//td[2]').first()).toContainText('Download');
  789 | await expect(page.locator('//div[@data-tut="tourreport2"]//td[3]').first()).toContainText('Pravin Testing account');  
  790 | await page.locator('//div[@data-tut="tourreport2"]//div[@role="button"and @title="Share"]').first().click();
  791 | await expect(page.locator('//div[@class="m-[20px]"]//div[1]//span[1]')).toContainText('andyamaya@nxglabs.in');
  792 |
  793 | });
  794 |
  795 | test('Verify that the user can rename and delete a document from the dashboard Recently sent for signatures.', async ({ page }) => {
  796 |   const commonSteps = new CommonSteps(page);
  797 |   // Step 1: Navigate to Base URL and log in
  798 |   await commonSteps.navigateToBaseUrl();
  799 |   await commonSteps.login();
  800 | //const title = await page.title()
  801 |   //Expects page to have a heading with the name of dashboard.
  802 | //expect(title).toBe('Dashboard - OpenSign™');
  803 | await page.getByRole('menuitem', { name: 'Request signatures' }).click();
  804 |   await page.locator('input[name="Name"]').click();
  805 |   await page.locator('input[name="Name"]').fill('Offer Letter for QA1144');
  806 |   await page.locator('input[name="Note"]').click();
  807 |   const fileChooserPromise = page.waitForEvent('filechooser');
  808 | await page.locator('input[type="file"]').click();
  809 | const fileChooser = await fileChooserPromise;
  810 | await fileChooser.setFiles(path.join(__dirname, '../TestData/Samplepdfs/Sample-Joining-Letter.pdf'));
  811 | await page.locator('div').filter({ hasText: /^Signers\*Select\.\.\.$/ }).locator('svg').click();
  812 | await page.getByRole('option', { name: 'Pravin Testing account<pravin' }).click();
  813 | await page.locator('input[name="Name"]').click();
  814 | await expect(page.getByRole('button', { name: 'Next' })).toBeEnabled({ timeout: 90000 }); // Wait up to 90s
  815 | await page.getByRole('button', { name: 'Next' }).click();
  816 | await page.waitForLoadState("networkidle");
  817 | await page.waitForSelector('//div[@class=\'react-pdf__Document\']', { timeout: 90000 }); 
  818 | await page.locator('//span[normalize-space()="signature"]').waitFor({ state: 'visible', timeout: 90000 });
  819 | await expect(page.locator('//span[normalize-space()=\'signature\']')).toBeVisible();
  820 | await page.locator('//span[normalize-space()=\'signature\']').hover();
  821 | await page.mouse.down();
  822 | await page.mouse.move(600, 300)
  823 | await page.mouse.up();
  824 | try {
  825 |   const rowLocator = page.locator('//div[@class="select-none-cls overflow-hidden w-full h-full text-black flex flex-col justify-center items-center"]//div[@class="font-medium"and text()="signature"]');
  826 |
  827 |   for (let i = 0; i < 5; i++) { // Retry up to 5 times
  828 |       if (await rowLocator.isVisible() && await rowLocator.isEnabled()) {
  829 |       
  830 |           console.log("signature widget dragged and dropped");
  831 |           break; // Exit the loop if successfully clicked
  832 |       } else {
  833 |           console.log(`Attempt ${i + 1}: signature widget not visible on the document, performing actions...`);
  834 |   
  835 |           await page.locator('//span[normalize-space()="signature"]').hover();
  836 |           await page.mouse.down();
  837 |           await page.mouse.move(800, 300);
  838 |           await page.mouse.up();
  839 |           
  840 |           // Wait a bit before checking again
  841 |           await page.waitForTimeout(1000);
  842 |       }
  843 |   
  844 |       if (i === 5) {
  845 |           console.log("signature widget did not become visible on the document after multiple attempts.");
  846 |       }
  847 |   }
  848 | } catch (error) {
  849 |   console.log("Element not found or not interactable, continuing execution.");
  850 |  
  851 | }
  852 | await page.getByRole('button', { name: 'Next' }).click();
  853 | //await expect(page.locator('#selectSignerModal')).toContainText('Are you sure you want to send out this document for signatures?');
  854 | await page.getByRole('button', { name: 'Send' }).click();
  855 | //await expect(page.locator('//h3[text()=\'Mails Sent\']')).toContainText('Mails Sent');
  856 | await expect(page.locator('#selectSignerModal canvas')).toBeVisible();
  857 | await expect(page.locator('#selectSignerModal')).toContainText('Mails Sent✕Subsequent signers will get email(s) once you signs the document.Do you want to sign the document right now?YesNoHow was your experience with OpenSign™?😡0-3😐4-6😊7-8😍9-10Submit');
  858 | await page.getByRole('button', { name: 'No' }).click();
  859 | await page.getByRole('menuitem', { name: 'Dashboard' }).click();
  860 | // Wait up to 90 seconds for the text to appear
  861 | await page.locator('#renderList').waitFor({ state: 'visible', timeout: 90000 });
  862 | await page.locator('//div[@data-tut="tourreport2"]//i[@class="fa-light fa-ellipsis-vertical fa-lg"]').first().click();
  863 | await page.locator('//span[contains(text(),"Rename")]').click();
  864 | await page.locator('//div[@class="flex flex-col gap-2"]/input[@maxlength="200" and @type="text"]').fill('Sample-joining-letter-2025');
  865 | await page.getByRole('button', { name: 'Save' }).click();
  866 | await expect(page.locator('//div[@data-tut="tourreport2"]//tr[1]//div[@class="font-semibold break-words"]')).toContainText('Sample-joining-letter-2025');
  867 | await page.locator('//div[@data-tut="tourreport2"]//i[@class="fa-light fa-ellipsis-vertical fa-lg"]').first().click();
  868 | await page.locator('//span[contains(text(),"Delete")]').click();
  869 | await expect(page.getByRole('heading')).toContainText('Delete document');
  870 |   await expect(page.locator('#selectSignerModal')).toContainText('Are you sure you want to delete this document?');
  871 |   await page.getByRole('button', { name: 'Yes' }).click();
  872 |   await expect(page.locator('#renderList')).toContainText('Record deleted successfully!');
  873 |   try {
  874 |     await expect(page.locator('//div[@data-tut="tourreport2"]//tr[1]//div[@class="font-semibold break-words"]')).toContainText('Sample-joining-letter-2025');
  875 | } catch (error) {
  876 |     console.log("Document not found in the table, successfully deleted!");
  877 | }
  878 | });
  879 |
  880 | test('Verify that user can resend the email from the dashboard Recently sent for signatures.', async ({ page }) => {
  881 |   const commonSteps = new CommonSteps(page);
  882 |   // Step 1: Navigate to Base URL and log in
  883 |   await commonSteps.navigateToBaseUrl();
  884 |   await commonSteps.login();
  885 | //const title = await page.title()
  886 |   //Expects page to have a heading with the name of dashboard.
```